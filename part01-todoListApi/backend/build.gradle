// Defines the plugins required for the project.
plugins {
    // Adds core Java compilation and build capabilities.
    id 'java'
    // Provides Spring Boot-specific tasks like 'bootRun' and manages the dependency versions.
    id 'org.springframework.boot' version '3.5.5'
    // Imports the Spring Boot dependency management, ensuring compatible library versions.
    id 'io.spring.dependency-management' version '1.1.7'
}

// Defines the project's metadata.
group = 'com.example' // The group ID for the project, typically your organization's reversed domain.
version = '0.0.1-SNAPSHOT' // The version of the project. 'SNAPSHOT' indicates it's a work in progress.
description = 'Part01 todo api' // A short description of the project.

// Configures the Java language settings for the project.
java {
    toolchain {
        // Specifies that the project source code is written in Java 17.
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Specifies the locations where Gradle should look for dependencies.
repositories {
    // Uses the Maven Central repository, the most common repository for Java libraries.
    mavenCentral()
}

// Defines the project's library dependencies.
dependencies {
    // Core dependency for building web applications, including RESTful APIs using Spring MVC.
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Dependency for using Spring Data JPA with Hibernate for database persistence.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // The H2 in-memory database driver. 'runtimeOnly' means it's only needed at runtime.
    runtimeOnly 'com.h2database:h2'

    // A library to reduce boilerplate code like getters, setters, and constructors.
    // 'compileOnly' means it's used during compilation but not included in the final JAR.
    compileOnly 'org.projectlombok:lombok'
    // The annotation processor for Lombok, which generates the code at compile time.
    annotationProcessor 'org.projectlombok:lombok'

    // Adds support for testing Spring Boot applications with libraries like JUnit 5, Mockito, etc.
    // 'testImplementation' means this dependency is only for the test source set.
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Dependency for automatically generating API documentation with Swagger UI.
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'

    // Provides the launcher required to run tests on the JUnit 5 platform.
    // 'testRuntimeOnly' means it's only needed at runtime for tests.
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Configures specific Gradle tasks.
tasks.named('test') {
    // Configures the 'test' task to use the JUnit Platform (for running JUnit 5 tests).
    useJUnitPlatform()
}